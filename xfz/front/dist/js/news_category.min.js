function NewsCategory(){}NewsCategory.prototype.run=function(){var t=this;t.listenAddCategoryEvent(),t.listenEditCategoryEvent(),t.listenDeleteCategoryEvent()},NewsCategory.prototype.listenAddCategoryEvent=function(){$("#add-btn").click(function(){xfzalert.alertOneInput({title:"添加新闻分类",placeholder:"请输入新闻分类",confirmCallback:function(t){xfzajax.post({url:"/cms/add_news_category/",data:{name:t},success:function(t){200==t.code?(console.log(t),window.location.reload()):xfzalert.close()}})}})})},NewsCategory.prototype.listenEditCategoryEvent=function(){$(".edit-btn").click(function(){var t=$(this).parent().parent(),e=t.attr("data-pk"),n=t.attr("data-name");xfzalert.alertOneInput({title:"修改新闻分类",placeholder:"请输入新的新闻分类",value:n,confirmCallback:function(t){xfzajax.post({url:"/cms/edit_news_category/",data:{pk:e,name:t},success:function(t){200==t.code?(console.log(t),window.location.reload()):xfzalert.close()}})}})})},NewsCategory.prototype.listenDeleteCategoryEvent=function(){$(".delete-btn").click(function(){var t=$(this).parent().parent().attr("data-pk");xfzalert.alertConfirm({title:"您确定要删除分类吗？",confirmCallback:function(){xfzajax.post({url:"/cms/delete_news_category/",data:{pk:t},success:function(t){200==t.code&&(console.log(t),window.location.reload())}})}})})},$(function(){(new NewsCategory).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3NfY2F0ZWdvcnkuanMiXSwibmFtZXMiOlsiTmV3c0NhdGVnb3J5IiwicHJvdG90eXBlIiwicnVuIiwic2VsZiIsInRoaXMiLCJsaXN0ZW5BZGRDYXRlZ29yeUV2ZW50IiwibGlzdGVuRWRpdENhdGVnb3J5RXZlbnQiLCJsaXN0ZW5EZWxldGVDYXRlZ29yeUV2ZW50IiwiJCIsImNsaWNrIiwieGZ6YWxlcnQiLCJhbGVydE9uZUlucHV0IiwidGl0bGUiLCJwbGFjZWhvbGRlciIsImNvbmZpcm1DYWxsYmFjayIsImlucHV0VmFsdWUiLCJ4ZnphamF4IiwicG9zdCIsInVybCIsImRhdGEiLCJuYW1lIiwic3VjY2VzcyIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCIsImNsb3NlIiwidHIiLCJwYXJlbnQiLCJwayIsImF0dHIiLCJ2YWx1ZSIsImFsZXJ0Q29uZmlybSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsZ0JBSVRBLGFBQWFDLFVBQVVDLElBQU0sV0FDekIsSUFBSUMsRUFBT0MsS0FDWEQsRUFBS0UseUJBQ0xGLEVBQUtHLDBCQUNMSCxFQUFLSSw2QkFHVFAsYUFBYUMsVUFBVUksdUJBQXlCLFdBQy9CRyxFQUFFLFlBQ1JDLE1BQU0sV0FDVEMsU0FBU0MsY0FBYyxDQUNuQkMsTUFBUyxTQUNUQyxZQUFlLFVBQ2ZDLGdCQUFtQixTQUFVQyxHQUN6QkMsUUFBUUMsS0FBSyxDQUNUQyxJQUFPLDBCQUNQQyxLQUFRLENBQ0pDLEtBQVFMLEdBRVpNLFFBQVcsU0FBVUMsR0FDSyxLQUFsQkEsRUFBYSxNQUNiQyxRQUFRQyxJQUFJRixHQUNaRyxPQUFPQyxTQUFTQyxVQUVoQmpCLFNBQVNrQixpQkFTckM1QixhQUFhQyxVQUFVSyx3QkFBMEIsV0FFL0JFLEVBQUUsYUFDUkMsTUFBTSxXQUNWLElBQ0lvQixFQURhckIsRUFBRUosTUFDQzBCLFNBQVNBLFNBQ3pCQyxFQUFLRixFQUFHRyxLQUFLLFdBQ2JaLEVBQU9TLEVBQUdHLEtBQUssYUFDbkJ0QixTQUFTQyxjQUFjLENBQ25CQyxNQUFTLFNBQ1RDLFlBQWUsWUFDZm9CLE1BQVNiLEVBQ1ROLGdCQUFtQixTQUFVQyxHQUN6QkMsUUFBUUMsS0FBSyxDQUNUQyxJQUFPLDJCQUNQQyxLQUFRLENBQ0pZLEdBQU1BLEVBQ05YLEtBQVFMLEdBRVpNLFFBQVcsU0FBVUMsR0FDSyxLQUFsQkEsRUFBYSxNQUNiQyxRQUFRQyxJQUFJRixHQUNaRyxPQUFPQyxTQUFTQyxVQUVoQmpCLFNBQVNrQixpQkFTckM1QixhQUFhQyxVQUFVTSwwQkFBNEIsV0FFL0JDLEVBQUUsZUFDUkMsTUFBTSxXQUNaLElBRUlzQixFQUZhdkIsRUFBRUosTUFDQzBCLFNBQVNBLFNBQ2pCRSxLQUFLLFdBQ2pCdEIsU0FBU3dCLGFBQWEsQ0FDbEJ0QixNQUFTLGFBQ1RFLGdCQUFtQixXQUNmRSxRQUFRQyxLQUFLLENBQ1RDLElBQU8sNkJBQ1BDLEtBQVEsQ0FDSlksR0FBTUEsR0FFVlYsUUFBVyxTQUFVQyxHQUNLLEtBQWxCQSxFQUFhLE9BQ2JDLFFBQVFDLElBQUlGLEdBQ1pHLE9BQU9DLFNBQVNDLG1CQVM1Q25CLEVBQUUsWUFDaUIsSUFBSVIsY0FDVkUiLCJmaWxlIjoibmV3c19jYXRlZ29yeS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBOZXdzQ2F0ZWdvcnkoKSB7XHJcblxyXG59O1xyXG5cclxuTmV3c0NhdGVnb3J5LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLmxpc3RlbkFkZENhdGVnb3J5RXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuRWRpdENhdGVnb3J5RXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuRGVsZXRlQ2F0ZWdvcnlFdmVudCgpO1xyXG59O1xyXG5cclxuTmV3c0NhdGVnb3J5LnByb3RvdHlwZS5saXN0ZW5BZGRDYXRlZ29yeUV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGFkZEJ0biA9ICQoJyNhZGQtYnRuJyk7XHJcbiAgICBhZGRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHhmemFsZXJ0LmFsZXJ0T25lSW5wdXQoe1xyXG4gICAgICAgICAgICAndGl0bGUnOiAn5re75Yqg5paw6Ze75YiG57G7JyxcclxuICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJzogJ+ivt+i+k+WFpeaWsOmXu+WIhuexuycsXHJcbiAgICAgICAgICAgICdjb25maXJtQ2FsbGJhY2snOiBmdW5jdGlvbiAoaW5wdXRWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgICAgICAgICAndXJsJzogJy9jbXMvYWRkX25ld3NfY2F0ZWdvcnkvJyxcclxuICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiBpbnB1dFZhbHVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5OZXdzQ2F0ZWdvcnkucHJvdG90eXBlLmxpc3RlbkVkaXRDYXRlZ29yeUV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGVkaXRCdG4gPSAkKCcuZWRpdC1idG4nKTtcclxuICAgIGVkaXRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJyZW50QnRuID0gJCh0aGlzKTtcclxuICAgICAgICB2YXIgdHIgPSBjdXJyZW50QnRuLnBhcmVudCgpLnBhcmVudCgpO1xyXG4gICAgICAgIHZhciBwayA9IHRyLmF0dHIoJ2RhdGEtcGsnKTtcclxuICAgICAgICB2YXIgbmFtZSA9IHRyLmF0dHIoJ2RhdGEtbmFtZScpO1xyXG4gICAgICAgIHhmemFsZXJ0LmFsZXJ0T25lSW5wdXQoe1xyXG4gICAgICAgICAgICAndGl0bGUnOiAn5L+u5pS55paw6Ze75YiG57G7JyxcclxuICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJzogJ+ivt+i+k+WFpeaWsOeahOaWsOmXu+WIhuexuycsXHJcbiAgICAgICAgICAgICd2YWx1ZSc6IG5hbWUsXHJcbiAgICAgICAgICAgICdjb25maXJtQ2FsbGJhY2snOiBmdW5jdGlvbiAoaW5wdXRWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgICAgICAgICAndXJsJzogJy9jbXMvZWRpdF9uZXdzX2NhdGVnb3J5LycsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdwayc6IHBrLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnbmFtZSc6IGlucHV0VmFsdWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeGZ6YWxlcnQuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbk5ld3NDYXRlZ29yeS5wcm90b3R5cGUubGlzdGVuRGVsZXRlQ2F0ZWdvcnlFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBkZWxldGVCdG4gPSAkKCcuZGVsZXRlLWJ0bicpO1xyXG4gICAgZGVsZXRlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY3VycmVudEJ0biA9ICQodGhpcyk7XHJcbiAgICAgICAgdmFyIHRyID0gY3VycmVudEJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcclxuICAgICAgICB2YXIgcGsgPSB0ci5hdHRyKCdkYXRhLXBrJyk7XHJcbiAgICAgICAgeGZ6YWxlcnQuYWxlcnRDb25maXJtKHtcclxuICAgICAgICAgICAgJ3RpdGxlJzogJ+aCqOehruWumuimgeWIoOmZpOWIhuexu+WQl++8nycsXHJcbiAgICAgICAgICAgICdjb25maXJtQ2FsbGJhY2snOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgICd1cmwnOiAnL2Ntcy9kZWxldGVfbmV3c19jYXRlZ29yeS8nLFxyXG4gICAgICAgICAgICAgICAgICAgICdkYXRhJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAncGsnOiBwayxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgY2F0ZWdvcnkgPSBuZXcgTmV3c0NhdGVnb3J5KCk7XHJcbiAgICBjYXRlZ29yeS5ydW4oKTtcclxufSk7Il19
